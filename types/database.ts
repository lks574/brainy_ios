// Database type definitions for Brainy Backend API
// This file will be auto-generated by Supabase CLI

export interface Database {
  public: {
    Tables: {
      users: {
        Row: {
          id: string;
          email: string;
          display_name: string;
          auth_provider: string;
          created_at: string;
          last_sync_at: string | null;
          is_active: boolean;
          metadata: Record<string, any>;
        };
        Insert: {
          id?: string;
          email: string;
          display_name: string;
          auth_provider?: string;
          created_at?: string;
          last_sync_at?: string | null;
          is_active?: boolean;
          metadata?: Record<string, any>;
        };
        Update: {
          id?: string;
          email?: string;
          display_name?: string;
          auth_provider?: string;
          created_at?: string;
          last_sync_at?: string | null;
          is_active?: boolean;
          metadata?: Record<string, any>;
        };
      };
      quiz_questions: {
        Row: {
          id: string;
          question: string;
          correct_answer: string;
          options: string[] | null;
          category: string;
          difficulty: string;
          type: string;
          audio_url: string | null;
          version: string;
          is_active: boolean;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          question: string;
          correct_answer: string;
          options?: string[] | null;
          category: string;
          difficulty?: string;
          type?: string;
          audio_url?: string | null;
          version?: string;
          is_active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          question?: string;
          correct_answer?: string;
          options?: string[] | null;
          category?: string;
          difficulty?: string;
          type?: string;
          audio_url?: string | null;
          version?: string;
          is_active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
      };
      quiz_results: {
        Row: {
          id: string;
          user_id: string;
          question_id: string;
          session_id: string;
          user_answer: string;
          is_correct: boolean;
          time_spent: number;
          completed_at: string;
        };
        Insert: {
          id?: string;
          user_id: string;
          question_id: string;
          session_id: string;
          user_answer: string;
          is_correct: boolean;
          time_spent: number;
          completed_at?: string;
        };
        Update: {
          id?: string;
          user_id?: string;
          question_id?: string;
          session_id?: string;
          user_answer?: string;
          is_correct?: boolean;
          time_spent?: number;
          completed_at?: string;
        };
      };
      quiz_sessions: {
        Row: {
          id: string;
          user_id: string;
          category: string;
          mode: string;
          total_questions: number;
          correct_answers: number;
          total_time: number;
          started_at: string;
          completed_at: string | null;
          metadata: Record<string, any>;
        };
        Insert: {
          id?: string;
          user_id: string;
          category: string;
          mode: string;
          total_questions: number;
          correct_answers?: number;
          total_time?: number;
          started_at?: string;
          completed_at?: string | null;
          metadata?: Record<string, any>;
        };
        Update: {
          id?: string;
          user_id?: string;
          category?: string;
          mode?: string;
          total_questions?: number;
          correct_answers?: number;
          total_time?: number;
          started_at?: string;
          completed_at?: string | null;
          metadata?: Record<string, any>;
        };
      };
      quiz_versions: {
        Row: {
          id: string;
          version: string;
          description: string | null;
          question_count: number;
          is_current: boolean;
          created_at: string;
        };
        Insert: {
          id?: string;
          version: string;
          description?: string | null;
          question_count?: number;
          is_current?: boolean;
          created_at?: string;
        };
        Update: {
          id?: string;
          version?: string;
          description?: string | null;
          question_count?: number;
          is_current?: boolean;
          created_at?: string;
        };
      };
    };
    Views: {
      [_ in never]: never;
    };
    Functions: {
      [_ in never]: never;
    };
    Enums: {
      [_ in never]: never;
    };
  };
}